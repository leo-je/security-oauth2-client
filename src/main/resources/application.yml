server:
  port: 6666

spring:
  application:
    name: system-service-auth-client
  redis:
    host: 127.0.0.1
    port: 6379
    password: 111111
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/je?useSSL=false
    username: cloud
    password: 111111
  freemarker:
    allow-request-override: false
    allow-session-override: false
    cache: true
    charset: UTF-8
    check-template-location: true
    content-type: text/html
    enabled: true
    expose-request-attributes: false
    expose-session-attributes: false
    expose-spring-macro-helpers: true
    prefer-file-system-access: true
    suffix: .ftl
    template-loader-path: classpath:/templates/

auth-server: http://localhost:7777 # 认证服务器地址

security:
  oauth2:
    client:
      client-id: client_2
      client-secret: 123456
      grant-type: password
      scope: select
      user-authorization-uri: ${auth-server}/oauth/authorize
      access-token-uri: ${auth-server}/oauth/token
    resource:
      token-info-uri: ${auth-server}/oauth/check-token #由资源服务器用来解码访问令牌
      user-info-uri: ${auth-server}/user # 一个可以获取认证授权的自定义接口，可以在授权服务器，也可以在其他服务器上
      prefer-token-info: true # 如果同时配置了token-info-uri 和 user-info-uri，这个现象设置使用哪个取验证授权
      jwt:
        key-value: 123    
    
mybatis:
  type-aliases-package: org.je.cloud.**.entity
  mapper-locations: classpath*:org/je/cloud/**/mapper/*.xml
#  config-location: classpath:mybatis/mybatis-config.xml

#pagehelper物理分页配置
pagehelper:
  helper-dialect: mysql
  reasonable: true
  support-methods-arguments: true
  params: count=countSql
  returnPageInfo: check
    
logging:
  config: classpath:logback.xml